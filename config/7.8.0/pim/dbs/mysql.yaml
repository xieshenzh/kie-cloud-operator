## KIE ProcessMigration BEGIN
processMigration:
  ## KIE ProcessMigration deployment config BEGIN
  deploymentConfigs:
    - metadata:
        name: "[[.ApplicationName]]-process-migration"
      spec:
        template:
          spec:
            initContainers:
              - command:
                  [
                    "/bin/bash",
                    "-c",
                    ">-
                    replicas=$(oc get dc [[.ApplicationName]]-process-migration-mysql -o=jsonpath='{.status.availableReplicas}'); until '[' $replicas -gt 0 ']'; do echo waiting for [[.ApplicationName]]-process-migration-mysql; replicas=$(oc get dc [[.ApplicationName]]-process-migration-mysql -o=jsonpath='{.status.availableReplicas}'); sleep 2; done;",
                  ]
                image: "[[$.Constants.OseCliImageURL]]"
                imagePullPolicy: IfNotPresent
                name: "[[.ApplicationName]]-process-migration-mysql-init"
                terminationMessagePolicy: FallbackToLogsOnError
            containers:
              - name: "[[.ApplicationName]]-process-migration"
                env:
                  - name: JBOSS_KIE_EXTRA_CLASSPATH
                    value: "/opt/rhpam-process-migration/drivers/mariadb-java-client.jar"
  ## KIE ProcessMigration deployment config END
  ## MySQL deployment BEGIN
    - metadata:
        name: "[[.ApplicationName]]-process-migration-mysql"
        labels:
          app: "[[$.ApplicationName]]"
          application: "[[$.ApplicationName]]"
          service: "[[.ApplicationName]]-process-migration-mysql"
      spec:
        strategy:
          type: Recreate
        triggers:
          - type: ConfigChange
        replicas: 1
        selector:
          deploymentConfig: "[[.ApplicationName]]-process-migration-mysql"
        template:
          metadata:
            name: "[[.ApplicationName]]-process-migration-mysql"
            labels:
              deploymentConfig: "[[.ApplicationName]]-process-migration-mysql"
              app: "[[$.ApplicationName]]"
              application: "[[$.ApplicationName]]"
              service: "[[.ApplicationName]]-process-migration-mysql"
          spec:
            terminationGracePeriodSeconds: 60
            containers:
              - name: "[[.ApplicationName]]-process-migration-mysql"
                image: "[[$.Constants.MySQLImageURL]]"
                imagePullPolicy: Always
                livenessProbe:
                  tcpSocket:
                    port: 3306
                  initialDelaySeconds: 30
                  timeoutSeconds: 1
                readinessProbe:
                  exec:
                    command:
                      - "/bin/sh"
                      - "-i"
                      - "-c"
                      - "MYSQL_PWD=$MYSQL_PASSWORD mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'"
                    port: 3306
                  initialDelaySeconds: 5
                  timeoutSeconds: 1
                ports:
                  - containerPort: 3306
                    protocol: TCP
                env:
                  - name: MYSQL_USER
                    value: "pim"
                  - name: MYSQL_PASSWORD
                    value: "[[$.DBPassword]]"
                  - name: MYSQL_DATABASE
                    value: "pimdb"
                volumeMounts:
                  - mountPath: "/var/lib/mysql/data"
                    name: "[[.ApplicationName]]-process-migration-mysql-[[$.Constants.DatabaseVolumeSuffix]]"
            ##[[ if ne .ProcessMigration.Database.Size "" ]]
            volumes:
              - name: "[[.ApplicationName]]-process-migration-mysql-[[$.Constants.DatabaseVolumeSuffix]]"
                persistentVolumeClaim:
                  claimName: "[[.ApplicationName]]-process-migration-mysql-claim"
  ## MySQL deployment END
  ## MySQL persistent volume claim BEGIN
  persistentVolumeClaims:
    - metadata:
        name: "[[.ApplicationName]]-process-migration-mysql-claim"
        labels:
          app: "[[$.ApplicationName]]"
          application: "[[$.ApplicationName]]"
          service: "[[.ApplicationName]]-process-migration-mysql"
      spec:
        # [[ if ne .ProcessMigration.Database.StorageClassName "" ]]
        storageClassName: "[[.ProcessMigration.Database.StorageClassName]]"
        # [[ end ]]
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "[[.ProcessMigration.Database.Size]]"
            ## MySQL persistent volume claim END
            ##[[ else ]]
            volumes:
              - name: "[[.ApplicationName]]-process-migration-mysql-[[$.Constants.DatabaseVolumeSuffix]]"
                emptyDir: {}
  ##[[ end ]]
  ## MySQL persistent volume claim END
  ## MySQL service BEGIN
  services:
    - spec:
        ports:
          - port: 3306
            targetPort: 3306
        selector:
          deploymentConfig: "[[.ApplicationName]]-process-migration-mysql"
      metadata:
        name: "[[.ApplicationName]]-process-migration-mysql"
        labels:
          app: "[[$.ApplicationName]]"
          application: "[[$.ApplicationName]]"
          service: "[[.ApplicationName]]-process-migration-mysql"
        annotations:
          description: The MySQL server's port.
  ## MySQL service END
  ## KIE ProcessMigration ConfigMap BEGIN
  configMaps:
    - metadata:
        name: "[[.ApplicationName]]-process-migration"
      data:
        project-overrides.yml: |-
          kieservers:
            #[[range $index, $Map := .ProcessMigration.KieServerClients]]
            - host: [[.Host]]
              username: [[.Username]]
              password: [[.Password]]
            #[[end]]
          thorntail:
            datasources:
              data-sources:
                pimDS:
                  driver-name: mariadb
                  connection-url: jdbc:mariadb://[[.ApplicationName]]-process-migration-mysql:3306/pimdb?useUnicode=true&useSSL=false&serverTimezone=UTC
                  user-name: pim
                  password: "[[$.DBPassword]]"
  ## KIE ProcessMigration ConfigMap END
## KIE ProcessMigration END
